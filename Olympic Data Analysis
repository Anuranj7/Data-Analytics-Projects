SELECT *
FROM olympicdata..athlete_events

SELECT *
FROM olympicdata..noc_regions
ORDER BY region

--1.	How many olympics games have been held?
SELECT COUNT(DISTINCT Games)
FROM olympicdata..athlete_events

--Ans: 51

--2.	List down all Olympics games held so far.
SELECT DISTINCT Year, Season, City
FROM olympicdata..athlete_events
ORDER BY Year

--3. Mention the total no of nations who participated in each olympics game?
SELECT Year, COUNT(DISTINCT region) AS no_of_country
FROM olympicdata..athlete_events AS a
JOIN olympicdata..noc_regions AS n
ON a.NOC = n.NOC
GROUP BY Year
ORDER BY Year

--4.	Which year saw the highest and lowest no of countries participating in olympics?

WITH t1 AS(SELECT TOP 1 Games AS lowest_country, 
			COUNT(DISTINCT region) AS lowest_no_of_country
FROM olympicdata..athlete_events AS a
JOIN olympicdata..noc_regions AS n
ON a.NOC = n.NOC
GROUP BY Games),

t2 AS(SELECT TOP 1 Games AS highest_country,
	COUNT (DISTINCT region) AS highest_no_country
	FROM olympicdata..athlete_events AS a
JOIN olympicdata..noc_regions AS n
ON a.NOC = n.NOC
GROUP BY Games
ORDER BY Games DESC)

SELECT CONCAT (lowest_country, ' ', lowest_no_of_country) AS lowest_game_coutry,
	  CONCAT (highest_country, ' ', highest_no_country) AS highest_game_country
FROM t1, t2


--5.	Which nation has participated in all of the olympic games?
SELECT region, COUNT(DISTINCT Games) AS no_of_games
FROM olympicdata..athlete_events AS a
JOIN olympicdata..noc_regions AS n
ON a.NOC = n.NOC
GROUP BY region
HAVING COUNT(DISTINCT Games) = 51

--6.	Identify the sport which was played in all summer olympics

--First, find the total number of summer olympics
SELECT COUNT (DISTINCT Games) AS total_games
FROM olympicdata..athlete_events
WHERE season = 'Summer'

--ANS = 29

SELECT sub.Sport, COUNT (sub.Sport) AS no_sport
FROM (SELECT DISTINCT Sport, Year
	 FROM olympicdata..athlete_events
	 WHERE Season = 'Summer' 
) sub
GROUP BY sub.Sport
HAVING COUNT(sub.Sport) = 29

--7.	Which Sports were just played only once in the olympics?

SELECT sub.Sport, COUNT (sub.Sport) AS no_sport
FROM (SELECT DISTINCT Sport, Year
	 FROM olympicdata..athlete_events 
) sub
GROUP BY sub.Sport
HAVING COUNT(sub.Sport) = 1

--8.	Fetch the total no of sports played in each olympic games

SELECT DISTINCT Games, COUNT(DISTINCT Sport) AS no_of_sports
FROM olympicdata..athlete_events 
GROUP BY Games
ORDER BY no_of_sports DESC

--9. 	Fetch details of the oldest athletes to win a gold medal.

SELECT *
FROM (SELECT *, DENSE_RANK() OVER(ORDER BY age DESC) AS rnk
FROM olympicdata..athlete_events
WHERE medal = 'Gold' )sub
WHERE rnk = 1

--10.	Find the Ratio of male and female athletes participated in all olympic games.

WITH t1 (div)
AS(
SELECT CAST (sub.count_guys AS float) / CAST(sub.count_girls AS float) AS div
FROM (SELECT COUNT(DISTINCT Games) AS count_games,
		SUM(CASE WHEN Sex = 'M' THEN 1 ELSE 0 END) AS count_guys,
		SUM(CASE WHEN Sex = 'F' THEN 1 ELSE 0 END) AS count_girls
	FROM olympicdata..athlete_events) sub)

SELECT CONCAT ('1 : ', round(div, 2)) AS ratio_gender
FROM t1


--11.	Fetch the top 5 athletes who have won the most gold medals

WITH t1(name, team, rank, medal_count)
AS(
SELECT name, team, DENSE_RANK() OVER(ORDER BY medal_count DESC) AS rank, medal_count
FROM (SELECT  Name, team, COUNT(Medal) AS medal_count
FROM olympicdata..athlete_events
WHERE Medal = 'Gold'
GROUP BY Name, team
) sub)

SELECT name, team, medal_count
FROM t1
WHERE rank <= 5


--12.	Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).
WITH t1(Name, team, medal_count, medal_rank)
AS(
SELECT Name, team, medal_count,
		DENSE_RANK() OVER( ORDER BY medal_count DESC) AS medal_rank
FROM(
SELECT Name, team, COUNT(Medal) AS medal_count
FROM olympicdata..athlete_events
WHERE medal IN ('gold', 'silver', 'bronze')
GROUP BY Name, team) sub)

SELECT Name, team, medal_count
FROM t1
WHERE medal_rank <= 5

--13.	Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won.

WITH t1 (region, no_medals, medal_rank)
AS (
SELECT region, no_medals, DENSE_RANK() OVER(ORDER BY no_medals DESC) AS medal_rank
FROM(
SELECT region, SUM (CASE WHEN medal IN ('gold', 'silver', 'bronze') 
				THEN 1 ELSE 0 END) AS no_medals
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY region
) sub)

SELECT region, no_medals
FROM t1
WHERE medal_rank <= 5

--14.	List down total gold, silver and broze medals won by each country.
SELECT region, SUM (CASE WHEN medal = 'gold' THEN 1 ELSE 0 END) AS no_gold,
				SUM (CASE WHEN medal = 'silver' THEN 1 ELSE 0 END) AS no_silver,
				SUM (CASE WHEN medal = 'bronze' THEN 1 ELSE 0 END) AS no_bronze
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY region
ORDER BY no_gold DESC, no_silver DESC, no_bronze DESC

--15.	List down total gold, silver and broze medals won by each country corresponding to each olympic games.

SELECT DISTINCT Games, region, SUM (CASE WHEN medal = 'gold' THEN 1 ELSE 0 END) AS no_gold,
				SUM (CASE WHEN medal = 'silver' THEN 1 ELSE 0 END) AS no_silver,
				SUM (CASE WHEN medal = 'bronze' THEN 1 ELSE 0 END) AS no_bronze
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY Games, region
ORDER BY Games, region

--16.	Identify which country won the most gold, most silver and most bronze medals in each olympic games.

WITH t1(Games, region, no_gold, no_silver, no_bronze)
AS(SELECT Games, region, SUM (CASE WHEN medal = 'gold' THEN 1 ELSE 0 END) AS no_gold,
				SUM (CASE WHEN medal = 'silver' THEN 1 ELSE 0 END) AS no_silver,
				SUM (CASE WHEN medal = 'bronze' THEN 1 ELSE 0 END) AS no_bronze
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY Games, region) 

SELECT Distinct Games,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_gold DESC)), 
		' - ', FIRST_VALUE (no_gold) OVER (PARTITION BY Games ORDER BY no_gold DESC)) AS Max_gold,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_silver DESC)),
		' - ', FIRST_VALUE (no_silver) OVER (PARTITION BY Games ORDER BY no_silver DESC)) AS Max_silver,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_bronze DESC)),
		' - ', FIRST_VALUE (no_bronze) OVER (PARTITION BY Games ORDER BY no_bronze DESC)) AS Max_bronze
FROM t1
ORDER BY games

--17.	Identify which country won the most gold, most silver, most bronze medals and the most medals in each olympic games.

WITH t1(Games, region, no_gold, no_silver, no_bronze, total_medal)
AS(SELECT Games, region, SUM (CASE WHEN medal = 'gold' THEN 1 ELSE 0 END) AS no_gold,
				SUM (CASE WHEN medal = 'silver' THEN 1 ELSE 0 END) AS no_silver,
				SUM (CASE WHEN medal = 'bronze' THEN 1 ELSE 0 END) AS no_bronze,
				SUM(CASE WHEN medal IN ('gold', 'silver', 'bronze') THEN 1 ELSE 0 END) AS total_medal
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY Games, region) 

SELECT Distinct Games,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_gold DESC)), 
		' - ', FIRST_VALUE (no_gold) OVER (PARTITION BY Games ORDER BY no_gold DESC)) AS Max_gold,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_silver DESC)),
		' - ', FIRST_VALUE (no_silver) OVER (PARTITION BY Games ORDER BY no_silver DESC)) AS Max_silver,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY no_bronze DESC)),
		' - ', FIRST_VALUE (no_bronze) OVER (PARTITION BY Games ORDER BY no_bronze DESC)) AS Max_bronze,
CONCAT ((FIRST_VALUE (region) OVER (PARTITION BY Games ORDER BY total_medal DESC)),
		' - ', FIRST_VALUE (total_medal) OVER (PARTITION BY Games ORDER BY total_medal DESC )) AS Total_no_medal
FROM t1
ORDER BY games


--18.	Which countries have never won gold medal but have won silver/bronze medals?
WITH t1 AS(SELECT region, SUM (CASE WHEN medal = 'gold' THEN 1 ELSE 0 END) AS no_gold,
				SUM (CASE WHEN medal = 'silver' THEN 1 ELSE 0 END) AS no_silver,
				SUM (CASE WHEN medal = 'bronze' THEN 1 ELSE 0 END) AS no_bronze
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY region
)

SELECT region, no_gold, no_silver, no_bronze
FROM t1
WHERE no_gold = 0 AND (no_silver > 0 OR no_bronze > 0)
ORDER BY no_silver DESC, no_bronze DESC

--19.	In which Sport/event has Nigeria won highest medals

WITH t2 AS(
SELECT Sport, Region, total_no_of_medal,
			DENSE_RANK() OVER (PARTITION BY Region ORDER BY total_no_of_medal DESC) AS new_rank
FROM (
		SELECT Sport, Region, SUM(CASE WHEN medal IN ('gold', 'silver', 'bronze') THEN 1 ELSE 0 END) AS total_no_of_medal
		FROM olympicdata..athlete_events AS o
		JOIN olympicdata..noc_regions AS r
		ON o.NOC = r.NOC
		GROUP BY Sport, Region)sub)

SELECT Sport, total_no_of_medal
FROM t2
WHERE new_rank = 1 AND region = 'Nigeria'


--20.	Break down all olympic games where Nigeria won medal for Football and how many medals in each olympic games.
SELECT Games, Region, Sport,
		SUM(CASE WHEN medal IN ('gold', 'silver', 'bronze') THEN 1 ELSE 0 END) AS total_no_of_medal
FROM olympicdata..athlete_events AS o
JOIN olympicdata..noc_regions AS r
ON o.NOC = r.NOC
GROUP BY Games, Region, Sport
HAVING Region = 'Nigeria' AND Sport = 'Football'
